package malware_gotchi;

import java.util.Scanner;

public class Pet {

    String name;
    private double happy;
    int batteries = 0;
    FileHandler file;

    Pet(String save){
    	this.file = new FileHandler(save);
    	this.batteries = file.getBatteries();
    	this.name = file.getName();
    
    }

    public void feed(){
    if (this.batteries >= 5){
        this.batteries -= 5;
        System.out.println("You used 5 batteries and fed " + this.name + "! Go you!" + '\n');
        file.setBatteries(batteries);
        file.setLastFed(System.currentTimeMillis());
        this.waiting();
        }
    else{
        System.out.println("You do not have enough batteries, you can win some more by playing a game." + '\n');
        this.waiting();
    }
    }
    public void game(){
        this.batteries += 3;
        System.out.println("You 'played' a game and found 3 batteries." + '\n');
        file.setBatteries(batteries);
        this.waiting();
    }

    public void pet(){
        System.out.println("You pet " + this.name + "! While the happiness is temporary, you can feel its warmth as it is comforted!"+ '\n');
        this.waiting();
    }

    public void stats(){
    	calculateHappiness();
    	long tDelta = (System.currentTimeMillis()-file.getLastFed())/1000;
        System.out.println("You last fed " + this.name + " "
    	+ Long.toString(tDelta)+" seconds ago." + '\n' + 
        this.name + " is " + String.format("%.2f", this.happy) + " happy." + '\n');
        this.waiting();
    }
    public void waiting(){
        try {
            Thread.sleep(500); 
          } catch (Exception e) {
              e.printStackTrace();
          }
    }
    private void calculateHappiness() {
    	this.happy = 36 - ((double)(System.currentTimeMillis()-file.getLastFed()))/3600000;
    }
    
    private void changeBatteries(int n) {
    	this.batteries = n;
    }
    
    public void debug(){
    	Scanner sc = new Scanner(System.in);
    	String ansStr = "";
    	boolean go;
    	boolean exitd = false;
    	String[] options = {"1", "2", "3"};
    	int ans;
        do{
            System.out.println("What values would you like to test?" + '\n' +
            "1. Set last logout time"+'\n'+
            "2. Set battery amount"+ '\n'+
            "3. Exit debug mode");

            ansStr = sc.next();
            go = false;
            while(!go) {
            	for(String i:options) {
            		if(ansStr.equals(i)){
            			go = true;
            		}
            	}
            	if(!go) {
            		System.out.println("Invalid input. Please try again. ");
            		ansStr = sc.next();
            	}
            }
        
            ans = Integer.valueOf(ansStr);
            
            switch(ans){
            
            case 1:
            System.out.println("Enter new value for time last fed in the format of System.currentTimeMillis");
            long t = sc.nextLong();
            file.setLastFed(t);
            	
            case 2:
            System.out.println("What value of batteries would you like to set?");
            int n = sc.nextInt();
            this.changeBatteries(n);
            
            case 3:
            sc.close();
            exitd = true;
            	    
            }
        }while(!exitd);
    

}
}
